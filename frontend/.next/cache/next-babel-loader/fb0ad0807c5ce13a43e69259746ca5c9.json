{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\TaeIl\\\\Desktop\\\\frontStudy\\\\React-Nodebird\\\\frontend\\\\pages\\\\post\\\\[id].tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\n// post/[id]\n// [id].tsx [id]는 바뀔 자리 (다이나믹 라우팅)\n\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nvar Post = function Post() {\n  _s();\n  var router = useRouter();\n  // 뒤에 숫자 바뀌도록 구조분해 동적 라우팅\n  var id = router.query.id;\n  // 좀 더 정확히 알고싶으면 SQL Like query 검색\n\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    singlePost = _useSelector.singlePost;\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"https://nodebird.com/post/\".concat(id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), __jsx(PostCard, {\n    post: singlePost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n};\n\n// export async function getStaticPaths() {\n//   return {\n//     paths: [\n//       { params: { id: '1' } },\n//       { params: { id: '2' } },\n//       { params: { id: '3' } },\n//     ],\n//     fallback: true,\n//   };\n// }\n_s(Post, \"mnFtsSWNkMUCzNZlr05ZwL2ppco=\", false, function () {\n  return [useRouter, useSelector];\n});\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["useRouter","useSelector","Head","AppLayout","PostCard","Post","router","id","query","state","post","singlePost","content","Images","src"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/pages/post/[id].tsx"],"sourcesContent":["// post/[id]\r\n// [id].tsx [id]는 바뀔 자리 (다이나믹 라우팅)\r\n\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport { useSelector } from 'react-redux';\r\nimport Head from 'next/head';\r\nimport { END } from 'redux-saga';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport wrapper from '../../store/configureStore';\r\n\r\nconst Post = () => {\r\n    const router = useRouter();\r\n    // 뒤에 숫자 바뀌도록 구조분해 동적 라우팅\r\n    const { id } = router.query;\r\n    // 좀 더 정확히 알고싶으면 SQL Like query 검색\r\n\r\n    const { singlePost } = useSelector((state: any) => state.post);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>\r\n                    {/* {singlePost.User.nickname} */}\r\n                    님의 글\r\n                </title>\r\n                <meta name=\"description\" content={singlePost.content} />\r\n                {/* <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} /> */}\r\n                <meta property=\"og:description\" content={singlePost.content} />\r\n                {/* 이미지가 없는 게시글 공유하면 favicon이 화면에 뜨게 */}\r\n                {/* 이미지가 있으면 첫번째 이미지가 뜨게 */}\r\n                <meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'} />\r\n                <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n            </Head>\r\n            <PostCard post={singlePost} />\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\n// export async function getStaticPaths() {\r\n//   return {\r\n//     paths: [\r\n//       { params: { id: '1' } },\r\n//       { params: { id: '2' } },\r\n//       { params: { id: '3' } },\r\n//     ],\r\n//     fallback: true,\r\n//   };\r\n// }\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store): any => async ({ req, params }) => {\r\n    console.log(store, req)\r\n    const cookie = req ? req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: params.id,\r\n    });\r\n    store.dispatch(END);\r\n    await store.sagaTask.toPromise();\r\n})\r\n\r\nexport default Post;"],"mappings":";;;;;AAAA;AACA;;AAGA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,IAAI,MAAM,WAAW;AAE5B,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAKhD,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAS;EAAA;EACf,IAAMC,MAAM,GAAGN,SAAS,EAAE;EAC1B;EACA,IAAQO,EAAE,GAAKD,MAAM,CAACE,KAAK,CAAnBD,EAAE;EACV;;EAEA,mBAAuBN,WAAW,CAAC,UAACQ,KAAU;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAtDC,UAAU,gBAAVA,UAAU;EAElB,OACI,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACN,MAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yBAGQ,EACR;IAAM,IAAI,EAAC,aAAa;IAAC,OAAO,EAAEA,UAAU,CAACC,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAExD;IAAM,QAAQ,EAAC,gBAAgB;IAAC,OAAO,EAAED,UAAU,CAACC,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAG/D;IAAM,QAAQ,EAAC,UAAU;IAAC,OAAO,EAAED,UAAU,CAACE,MAAM,CAAC,CAAC,CAAC,GAAGF,UAAU,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,GAAG,kCAAmC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC3H;IAAM,QAAQ,EAAC,QAAQ;IAAC,OAAO,sCAA+BP,EAAE,CAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACnE,EACP,MAAC,QAAQ;IAAC,IAAI,EAAEI,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACtB;AAEpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GArCMN,IAAI;EAAA,QACSL,SAAS,EAKDC,WAAW;AAAA;AAAA,KANhCI,IAAI;AAAA;AAyDV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}