{"ast":null,"code":"// redux-thunk (한번에 dispatch를 여러번 할 수 있게 해준다) 여기선 안씀\n\nimport produce from 'immer';\nexport const initialState = {\n  loadMyInfoLoading: false,\n  // 유저 정보 가져오기 시도중\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  loadUserLoading: false,\n  // 유저 정보 가져오기 시도중\n  loadUserDone: false,\n  loadUserError: null,\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  unfollowError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  loadFollowingsLoading: false,\n  loadFollowingsDone: false,\n  loadFollowingsError: null,\n  loadFollowersLoading: false,\n  loadFollowersDone: false,\n  loadFollowersError: null,\n  removeFollowerLoading: false,\n  removeFollowerDone: false,\n  removeFollowerError: null,\n  me: null,\n  userInfo: null,\n  signUpData: {},\n  loginData: {}\n};\n\n// 다른 파일에서도 써야하니까 export\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\n\n// user reducer 상태를 바꿀 수 있는 action\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\n// Sequelize에서 합쳐준다\n// 중복되는 더미데이터 함수로 묶음\n// const dummyUser = (data) => ({\n//     ...data,\n//     nickname: 'Violet',\n//     id: 1,\n//     Posts: [{ id: 1 }],\n//     Followings: [{ nickname: 'dummy1' }, { nickname: 'dummy2' }, { nickname: 'dummy333' }],\n//     Followers: [{ nickname: 'dummy1' }, { nickname: 'dummy2' }, { nickname: 'dummy333' }],\n// })\n\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST\n});\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case REMOVE_FOLLOWER_REQUEST:\n      draft.removeFollowerLoading = true;\n      draft.removeFollowerError = null;\n      draft.removeFollowerDone = false;\n      break;\n    case REMOVE_FOLLOWER_SUCCESS:\n      draft.removeFollowerLoading = false;\n      draft.me.Followers = draft.me.Followers.filter(v => v.id !== action.data.UserId);\n      draft.removeFollowerDone = true;\n      break;\n    case REMOVE_FOLLOWER_FAILURE:\n      draft.removeFollowerLoading = false;\n      draft.removeFollowerError = action.error;\n      break;\n    case LOAD_FOLLOWINGS_REQUEST:\n      draft.loadFollowingsLoading = true;\n      draft.loadFollowingsError = null;\n      draft.loadFollowingsDone = false;\n      break;\n    case LOAD_FOLLOWINGS_SUCCESS:\n      draft.loadFollowingsLoading = false;\n      draft.me.Followings = action.data;\n      draft.loadFollowingsDone = true;\n      break;\n    case LOAD_FOLLOWINGS_FAILURE:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsError = action.error;\n      break;\n    case LOAD_FOLLOWERS_REQUEST:\n      draft.loadFollowersLoading = true;\n      draft.loadFollowersError = null;\n      draft.loadFollowersDone = false;\n      break;\n    case LOAD_FOLLOWERS_SUCCESS:\n      draft.loadFollowersLoading = false;\n      draft.me.Followers = action.data;\n      draft.loadFollowersDone = true;\n      break;\n    case LOAD_FOLLOWERS_FAILURE:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersError = action.error;\n      break;\n    case LOAD_MY_INFO_REQUEST:\n      draft.loadMyInfoLoading = true;\n      draft.loadMyInfoError = null;\n      draft.loadMyInfoDone = false;\n      break;\n    case LOAD_MY_INFO_SUCCESS:\n      draft.loadMyInfoLoading = false;\n      draft.me = action.data;\n      draft.loadMyInfoDone = true;\n      break;\n    case LOAD_MY_INFO_FAILURE:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoError = action.error;\n      break;\n    case LOAD_USER_REQUEST:\n      draft.loadUserLoading = true;\n      draft.loadUserError = null;\n      draft.loadUserDone = false;\n      break;\n    case LOAD_USER_SUCCESS:\n      draft.loadUserLoading = false;\n      draft.me = action.data;\n      draft.loadUserDone = true;\n      break;\n    case LOAD_USER_FAILURE:\n      draft.loadUserLoading = false;\n      draft.loadUserError = action.error;\n      break;\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      draft.followError = null;\n      draft.followDone = false;\n      break;\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.me.Followings.push({\n        id: action.data.UserId\n      });\n      draft.followDone = true;\n      break;\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      break;\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      draft.unfollowError = null;\n      draft.unfollowDone = false;\n      break;\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      // 언팔한 사람 제외\n      draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data.UserId);\n      draft.unfollowDone = true;\n      break;\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      break;\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.me = action.data;\n      draft.logInDone = true;\n      break;\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutError = null;\n      draft.logOutDone = false;\n      break;\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpError = null;\n      draft.signUpDone = false;\n      break;\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      break;\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      break;\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameError = null;\n      draft.changeNicknameDone = false;\n      break;\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.me.nickname = action.data.nickname;\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      break;\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift({\n        id: action.data\n      });\n      break;\n    // immer 적용 이전\n    // return {\n    //   ...state,\n    //   me: {\n    //     ...state.me,\n    //     Posts: [{ id: action.data }, ...state.me.Posts],\n    //   },\n    // };\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n      break;\n    // return {\n    //   ...state,\n    //   me: {\n    //     ...state.me,\n    //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\n    //   },\n    // };\n    default:\n      break;\n  }\n});\nexport default reducer;","map":{"version":3,"names":["produce","initialState","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","loadFollowersLoading","loadFollowersDone","loadFollowersError","removeFollowerLoading","removeFollowerDone","removeFollowerError","me","userInfo","signUpData","loginData","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","draft","Followers","filter","v","id","UserId","error","Followings","push","nickname","Posts","unshift"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/reducers/user.tsx"],"sourcesContent":["// redux-thunk (한번에 dispatch를 여러번 할 수 있게 해준다) 여기선 안씀\r\n\r\nimport produce from 'immer';\r\n\r\nexport const initialState = {\r\n    loadMyInfoLoading: false, // 유저 정보 가져오기 시도중\r\n    loadMyInfoDone: false,\r\n    loadMyInfoError: null,\r\n    loadUserLoading: false, // 유저 정보 가져오기 시도중\r\n    loadUserDone: false,\r\n    loadUserError: null,\r\n    followLoading: false, // 팔로우 시도중\r\n    followDone: false,\r\n    followError: null,\r\n    unfollowLoading: false, // 언팔로우 시도중\r\n    unfollowDone: false,\r\n    unfollowError: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,\r\n    logInError: null,\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null,\r\n    signUpLoading: false, // 회원가입 시도중\r\n    signUpDone: false,\r\n    signUpError: null,\r\n    changeNicknameLoading: false, // 닉네임 변경 시도중\r\n    changeNicknameDone: false,\r\n    changeNicknameError: null,\r\n    loadFollowingsLoading: false,\r\n    loadFollowingsDone: false,\r\n    loadFollowingsError: null,\r\n    loadFollowersLoading: false,\r\n    loadFollowersDone: false,\r\n    loadFollowersError: null,\r\n    removeFollowerLoading: false,\r\n    removeFollowerDone: false,\r\n    removeFollowerError: null,\r\n    me: null,\r\n    userInfo: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\n\r\n// 다른 파일에서도 써야하니까 export\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST' as const;\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS' as const;\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE' as const;\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST' as const;\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS' as const;\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE' as const;\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST' as const;\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS' as const;\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE' as const;\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST' as const;\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS' as const;\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE' as const;\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST' as const;\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS' as const;\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE' as const;\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST' as const;\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS' as const;\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE' as const;\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST' as const;\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS' as const;\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE' as const;\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST' as const;\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS' as const;\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE' as const;\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST' as const;\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS' as const;\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE' as const;\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST' as const;\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS' as const;\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE' as const;\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST' as const;\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS' as const;\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE' as const;\r\n\r\n// user reducer 상태를 바꿀 수 있는 action\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME' as const;\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME' as const;\r\n\r\n// Sequelize에서 합쳐준다\r\n// 중복되는 더미데이터 함수로 묶음\r\n// const dummyUser = (data) => ({\r\n//     ...data,\r\n//     nickname: 'Violet',\r\n//     id: 1,\r\n//     Posts: [{ id: 1 }],\r\n//     Followings: [{ nickname: 'dummy1' }, { nickname: 'dummy2' }, { nickname: 'dummy333' }],\r\n//     Followers: [{ nickname: 'dummy1' }, { nickname: 'dummy2' }, { nickname: 'dummy333' }],\r\n// })\r\n\r\nexport const loginRequestAction = (data) => ({\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const logoutRequestAction = () => ({\r\n    type: LOG_OUT_REQUEST,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case REMOVE_FOLLOWER_REQUEST:\r\n            draft.removeFollowerLoading = true;\r\n            draft.removeFollowerError = null;\r\n            draft.removeFollowerDone = false;\r\n            break;\r\n        case REMOVE_FOLLOWER_SUCCESS:\r\n            draft.removeFollowerLoading = false;\r\n            draft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId);\r\n            draft.removeFollowerDone = true;\r\n            break;\r\n        case REMOVE_FOLLOWER_FAILURE:\r\n            draft.removeFollowerLoading = false;\r\n            draft.removeFollowerError = action.error;\r\n            break;\r\n        case LOAD_FOLLOWINGS_REQUEST:\r\n            draft.loadFollowingsLoading = true;\r\n            draft.loadFollowingsError = null;\r\n            draft.loadFollowingsDone = false;\r\n            break;\r\n        case LOAD_FOLLOWINGS_SUCCESS:\r\n            draft.loadFollowingsLoading = false;\r\n            draft.me.Followings = action.data;\r\n            draft.loadFollowingsDone = true;\r\n            break;\r\n        case LOAD_FOLLOWINGS_FAILURE:\r\n            draft.loadFollowingsLoading = false;\r\n            draft.loadFollowingsError = action.error;\r\n            break;\r\n        case LOAD_FOLLOWERS_REQUEST:\r\n            draft.loadFollowersLoading = true;\r\n            draft.loadFollowersError = null;\r\n            draft.loadFollowersDone = false;\r\n            break;\r\n        case LOAD_FOLLOWERS_SUCCESS:\r\n            draft.loadFollowersLoading = false;\r\n            draft.me.Followers = action.data;\r\n            draft.loadFollowersDone = true;\r\n            break;\r\n        case LOAD_FOLLOWERS_FAILURE:\r\n            draft.loadFollowersLoading = false;\r\n            draft.loadFollowersError = action.error;\r\n            break;\r\n        case LOAD_MY_INFO_REQUEST:\r\n            draft.loadMyInfoLoading = true;\r\n            draft.loadMyInfoError = null;\r\n            draft.loadMyInfoDone = false;\r\n            break;\r\n        case LOAD_MY_INFO_SUCCESS:\r\n            draft.loadMyInfoLoading = false;\r\n            draft.me = action.data;\r\n            draft.loadMyInfoDone = true;\r\n            break;\r\n        case LOAD_MY_INFO_FAILURE:\r\n            draft.loadMyInfoLoading = false;\r\n            draft.loadMyInfoError = action.error;\r\n            break;\r\n        case LOAD_USER_REQUEST:\r\n            draft.loadUserLoading = true;\r\n            draft.loadUserError = null;\r\n            draft.loadUserDone = false;\r\n            break;\r\n        case LOAD_USER_SUCCESS:\r\n            draft.loadUserLoading = false;\r\n            draft.me = action.data;\r\n            draft.loadUserDone = true;\r\n            break;\r\n        case LOAD_USER_FAILURE:\r\n            draft.loadUserLoading = false;\r\n            draft.loadUserError = action.error;\r\n            break;\r\n        case FOLLOW_REQUEST:\r\n            draft.followLoading = true;\r\n            draft.followError = null;\r\n            draft.followDone = false;\r\n            break;\r\n        case FOLLOW_SUCCESS:\r\n            draft.followLoading = false;\r\n            draft.me.Followings.push({ id: action.data.UserId });\r\n            draft.followDone = true;\r\n            break;\r\n        case FOLLOW_FAILURE:\r\n            draft.followLoading = false;\r\n            draft.followError = action.error;\r\n            break;\r\n        case UNFOLLOW_REQUEST:\r\n            draft.unfollowLoading = true;\r\n            draft.unfollowError = null;\r\n            draft.unfollowDone = false;\r\n            break;\r\n        case UNFOLLOW_SUCCESS:\r\n            draft.unfollowLoading = false;\r\n            // 언팔한 사람 제외\r\n            draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId);\r\n            draft.unfollowDone = true;\r\n            break;\r\n        case UNFOLLOW_FAILURE:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowError = action.error;\r\n            break;\r\n        case LOG_IN_REQUEST:\r\n            draft.logInLoading = true;\r\n            draft.logInError = null;\r\n            draft.logInDone = false;\r\n            break;\r\n        case LOG_IN_SUCCESS:\r\n            draft.logInLoading = false;\r\n            draft.me = action.data;\r\n            draft.logInDone = true;\r\n            break;\r\n        case LOG_IN_FAILURE:\r\n            draft.logInLoading = false;\r\n            draft.logInError = action.error;\r\n            break;\r\n        case LOG_OUT_REQUEST:\r\n            draft.logOutLoading = true;\r\n            draft.logOutError = null;\r\n            draft.logOutDone = false;\r\n            break;\r\n        case LOG_OUT_SUCCESS:\r\n            draft.logOutLoading = false;\r\n            draft.logOutDone = true;\r\n            draft.me = null;\r\n            break;\r\n        case LOG_OUT_FAILURE:\r\n            draft.logOutLoading = false;\r\n            draft.logOutError = action.error;\r\n            break;\r\n        case SIGN_UP_REQUEST:\r\n            draft.signUpLoading = true;\r\n            draft.signUpError = null;\r\n            draft.signUpDone = false;\r\n            break;\r\n        case SIGN_UP_SUCCESS:\r\n            draft.signUpLoading = false;\r\n            draft.signUpDone = true;\r\n            break;\r\n        case SIGN_UP_FAILURE:\r\n            draft.signUpLoading = false;\r\n            draft.signUpError = action.error;\r\n            break;\r\n        case CHANGE_NICKNAME_REQUEST:\r\n            draft.changeNicknameLoading = true;\r\n            draft.changeNicknameError = null;\r\n            draft.changeNicknameDone = false;\r\n            break;\r\n        case CHANGE_NICKNAME_SUCCESS:\r\n            draft.me.nickname = action.data.nickname;\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameDone = true;\r\n            break;\r\n        case CHANGE_NICKNAME_FAILURE:\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameError = action.error;\r\n            break;\r\n        case ADD_POST_TO_ME:\r\n            draft.me.Posts.unshift({ id: action.data });\r\n            break;\r\n        // immer 적용 이전\r\n        // return {\r\n        //   ...state,\r\n        //   me: {\r\n        //     ...state.me,\r\n        //     Posts: [{ id: action.data }, ...state.me.Posts],\r\n        //   },\r\n        // };\r\n        case REMOVE_POST_OF_ME:\r\n            draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n            break;\r\n        // return {\r\n        //   ...state,\r\n        //   me: {\r\n        //     ...state.me,\r\n        //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        //   },\r\n        // };\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}