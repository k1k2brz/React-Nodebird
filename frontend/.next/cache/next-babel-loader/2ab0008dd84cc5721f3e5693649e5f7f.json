{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(removeFollower),\n  _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(loadFollowers),\n  _marked3 = /*#__PURE__*/_regeneratorRuntime().mark(loadFollowings),\n  _marked4 = /*#__PURE__*/_regeneratorRuntime().mark(follow),\n  _marked5 = /*#__PURE__*/_regeneratorRuntime().mark(unfollow),\n  _marked6 = /*#__PURE__*/_regeneratorRuntime().mark(changeNickname),\n  _marked7 = /*#__PURE__*/_regeneratorRuntime().mark(loadUser),\n  _marked8 = /*#__PURE__*/_regeneratorRuntime().mark(logIn),\n  _marked9 = /*#__PURE__*/_regeneratorRuntime().mark(logOut),\n  _marked10 = /*#__PURE__*/_regeneratorRuntime().mark(signUp),\n  _marked11 = /*#__PURE__*/_regeneratorRuntime().mark(watchChangeNickname),\n  _marked12 = /*#__PURE__*/_regeneratorRuntime().mark(watchLoadUser),\n  _marked13 = /*#__PURE__*/_regeneratorRuntime().mark(watchFollow),\n  _marked14 = /*#__PURE__*/_regeneratorRuntime().mark(watchUnfollow),\n  _marked15 = /*#__PURE__*/_regeneratorRuntime().mark(watchLogIn),\n  _marked16 = /*#__PURE__*/_regeneratorRuntime().mark(watchLogOut),\n  _marked17 = /*#__PURE__*/_regeneratorRuntime().mark(watchSignUp),\n  _marked18 = /*#__PURE__*/_regeneratorRuntime().mark(userSaga);\nimport { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_SUCCESS, LOG_OUT_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_FAILURE, LOG_OUT_REQUEST, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, FOLLOW_REQUEST, UNFOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_SUCCESS, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE } from '../reducers/user';\n\n// SAGA를 통해 백엔드 (port 3065에 요청)\n// axios보낼 https주소 saga폴더 index에 중복되는 부분 변수로 묶어줌\n// withCredentials 공통설정 해줘서 자동으로 들어감\n\nfunction removeFollowerAPI(data) {\n  return axios[\"delete\"](\"/user/follower/\".concat(data));\n}\nfunction removeFollower(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function removeFollower$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(removeFollowerAPI, action.data);\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: REMOVE_FOLLOWER_SUCCESS,\n            data: result.data\n          });\n        case 6:\n          _context.next = 13;\n          break;\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: REMOVE_FOLLOWER_FAILURE,\n            error: _context.t0.response.data\n          });\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\nfunction loadFollowersAPI(data) {\n  return axios.get('/user/followers', data);\n}\nfunction loadFollowers(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function loadFollowers$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loadFollowersAPI, action.data);\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data\n          });\n        case 6:\n          _context2.next = 13;\n          break;\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 13;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context2.t0.response.data\n          });\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\nfunction loadFollowingsAPI(data) {\n  return axios.get('/user/followings', data);\n}\nfunction loadFollowings(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function loadFollowings$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadFollowingsAPI, action.data);\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data\n          });\n        case 6:\n          _context3.next = 13;\n          break;\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: _context3.t0.response.data\n          });\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\nfunction followAPI(data) {\n  return axios.patch(\"/user/\".concat(data, \"/follow\"));\n}\nfunction follow(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function follow$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(followAPI, action.data);\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: FOLLOW_SUCCESS,\n            data: result.data\n          });\n        case 6:\n          _context4.next = 12;\n          break;\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            type: FOLLOW_FAILURE,\n            error: _context4.t0.response.data\n          });\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\nfunction unfollowAPI(data) {\n  return axios[\"delete\"](\"/user/\".concat(data, \"/follow\"));\n}\nfunction unfollow(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function unfollow$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(unfollowAPI, action.data);\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: UNFOLLOW_SUCCESS,\n            data: result.data\n          });\n        case 6:\n          _context5.next = 12;\n          break;\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            type: UNFOLLOW_FAILURE,\n            error: _context5.t0.response.data\n          });\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n;\nfunction changeNickname(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function changeNickname$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(changeNicknameAPI, action.data);\n        case 3:\n          result = _context6.sent;\n          console.log(result);\n          _context6.next = 7;\n          return put({\n            type: CHANGE_NICKNAME_SUCCESS,\n            data: result.data\n          });\n        case 7:\n          _context6.next = 14;\n          break;\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error(_context6.t0);\n          _context6.next = 14;\n          return put({\n            type: CHANGE_NICKNAME_FAILURE,\n            error: _context6.t0.response.data\n          });\n        case 14:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 9]]);\n}\nfunction loadUserAPI(data) {\n  return axios.get('/user');\n}\n;\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadUserAPI, action.data);\n        case 3:\n          result = _context7.sent;\n          console.log(result);\n          _context7.next = 7;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n        case 7:\n          _context7.next = 14;\n          break;\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 14;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context7.t0.response.data\n          });\n        case 14:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 9]]);\n}\n\n// login 할때 받아와야 하는 data\nfunction logInAPI(data) {\n  // API는 제너레이터가 아님 주의할 것 \n  return axios.post('/user/login', data);\n}\n\n// call을 사용하면 이렇게 펼쳐서 적어줘야 함\n// logInAPI(action.data);\n// call(logInAPI, action.data);\n\n// action.type 하면 Login request가 나오고 action.data하면 로그인 데이터가 들어있음\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function logIn$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(logInAPI, action.data);\n        case 3:\n          result = _context8.sent;\n          _context8.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n            // data: action.data, 더미용\n          });\n        case 6:\n          _context8.next = 12;\n          break;\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          _context8.next = 12;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context8.t0.response.data\n          });\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 8]]);\n}\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\nfunction logOut() {\n  return _regeneratorRuntime().wrap(function logOut$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(logOutAPI);\n        case 3:\n          _context9.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n        case 5:\n          _context9.next = 11;\n          break;\n        case 7:\n          _context9.prev = 7;\n          _context9.t0 = _context9[\"catch\"](0);\n          _context9.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context9.t0.response.data\n          });\n        case 11:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 7]]);\n}\nfunction signUpAPI(data) {\n  // data는 email, password, nickname (signUp에서 넘어옴)\n  return axios.post('/user', data);\n}\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime().wrap(function signUp$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return call(signUpAPI, action.data);\n        case 3:\n          result = _context10.sent;\n          console.log(result);\n          // yield delay(1000);\n          _context10.next = 7;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n        case 7:\n          _context10.next = 13;\n          break;\n        case 9:\n          _context10.prev = 9;\n          _context10.t0 = _context10[\"catch\"](0);\n          _context10.next = 13;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context10.t0.response.data\n          });\n        case 13:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 9]]);\n}\nfunction watchChangeNickname() {\n  return _regeneratorRuntime().wrap(function watchChangeNickname$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\nfunction watchLoadUser() {\n  return _regeneratorRuntime().wrap(function watchLoadUser$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(LOAD_USER_REQUEST, loadUser);\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\nfunction watchFollow() {\n  return _regeneratorRuntime().wrap(function watchFollow$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\nfunction watchUnfollow() {\n  return _regeneratorRuntime().wrap(function watchUnfollow$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollow);\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n// 한 번 밖에 받지 않는다 (1번 받고나면 이벤트 리스너 사라짐)\n// 1. takeEvery를 사용하거나 (while문 대체) 2. while로 감싸서 무한으로 실행되게 해준다. (잘 안씀)\nfunction watchLogIn() {\n  return _regeneratorRuntime().wrap(function watchLogIn$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\nfunction watchLogOut() {\n  return _regeneratorRuntime().wrap(function watchLogOut$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\nfunction watchSignUp() {\n  return _regeneratorRuntime().wrap(function watchSignUp$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\nexport default function userSaga() {\n  return _regeneratorRuntime().wrap(function userSaga$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return all([fork(watchChangeNickname), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}","map":{"version":3,"names":["removeFollower","loadFollowers","loadFollowings","follow","unfollow","changeNickname","loadUser","logIn","logOut","signUp","watchChangeNickname","watchLoadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga","all","fork","put","takeLatest","call","axios","LOG_IN_SUCCESS","LOG_OUT_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_FAILURE","LOG_OUT_REQUEST","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_SUCCESS","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","removeFollowerAPI","data","action","result","type","console","error","response","loadFollowersAPI","get","loadFollowingsAPI","followAPI","patch","unfollowAPI","changeNicknameAPI","nickname","log","loadUserAPI","logInAPI","post","logOutAPI","signUpAPI"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/sagas/user.tsx"],"sourcesContent":["import { all, fork, delay, put, takeEvery, takeLatest, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    LOG_IN_SUCCESS, LOG_OUT_SUCCESS, LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST, LOG_OUT_FAILURE, LOG_OUT_REQUEST,\r\n    SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS,\r\n    FOLLOW_REQUEST, UNFOLLOW_REQUEST, FOLLOW_SUCCESS,\r\n    FOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\r\n    LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\r\n    CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_SUCCESS,\r\n    LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWERS_SUCCESS,\r\n    LOAD_FOLLOWERS_FAILURE,\r\n    REMOVE_FOLLOWER_SUCCESS,\r\n    REMOVE_FOLLOWER_FAILURE,\r\n} from '../reducers/user';\r\n\r\n// SAGA를 통해 백엔드 (port 3065에 요청)\r\n// axios보낼 https주소 saga폴더 index에 중복되는 부분 변수로 묶어줌\r\n// withCredentials 공통설정 해줘서 자동으로 들어감\r\n\r\nfunction removeFollowerAPI(data) {\r\n    return axios.delete(`/user/follower/${data}`);\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n    try {\r\n        const result = yield call(removeFollowerAPI, action.data);\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: REMOVE_FOLLOWER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n    return axios.get('/user/followers', data);\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        const result = yield call(loadFollowersAPI, action.data);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWERS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n    return axios.get('/user/followings', data);\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        const result = yield call(loadFollowingsAPI, action.data);\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_FOLLOWINGS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction followAPI(data) {\r\n    return axios.patch(`/user/${data}/follow`)\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        const result = yield call(followAPI, action.data)\r\n        // yield delay(1000); 더미데이터용\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch (err) {\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.delete(`/user/${data}/follow`)\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI, action.data)\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch (err) {\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname', { nickname: data });\r\n};\r\n\r\nfunction* changeNickname(action) {\r\n    try {\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        console.log(result)\r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadUserAPI(data) {\r\n    return axios.get('/user');\r\n};\r\n\r\nfunction* loadUser(action) {\r\n    try {\r\n        const result = yield call(loadUserAPI, action.data);\r\n        console.log(result)\r\n        yield put({\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOAD_USER_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n// login 할때 받아와야 하는 data\r\nfunction logInAPI(data) {\r\n    // API는 제너레이터가 아님 주의할 것 \r\n    return axios.post('/user/login', data)\r\n}\r\n\r\n// call을 사용하면 이렇게 펼쳐서 적어줘야 함\r\n// logInAPI(action.data);\r\n// call(logInAPI, action.data);\r\n\r\n// action.type 하면 Login request가 나오고 action.data하면 로그인 데이터가 들어있음\r\nfunction* logIn(action) {\r\n    // 요청의 결과를 받는다.\r\n    try {\r\n        // fork는 비동기 함수호출 (결과값 상관없이 바로 실행)\r\n        // call은 동기 함수호출 (결과값 받아올 때 까지 기다림 (ex)then(() => )를 받아오듯)\r\n\r\n        const result = yield call(logInAPI, action.data)\r\n        // yield delay(1000); // 서버가 아직 없기 때문에\r\n        // call(logInAPI, action.data)처럼 작성해야 테스트하기 쉽다.\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n            // data: action.data, 더미용\r\n        });\r\n    } catch (err) {\r\n        //성공은 result.data 실패는 err.response.data에 담긴다\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/user/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        yield call(logOutAPI)\r\n        // yield delay(1000);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    // data는 email, password, nickname (signUp에서 넘어옴)\r\n    return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        // action.data 넣어주면 signUpAPI에서 data받기 가능\r\n        const result = yield call(signUpAPI, action.data)\r\n        console.log(result)\r\n        // yield delay(1000);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchChangeNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nfunction* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n// 한 번 밖에 받지 않는다 (1번 받고나면 이벤트 리스너 사라짐)\r\n// 1. takeEvery를 사용하거나 (while문 대체) 2. while로 감싸서 무한으로 실행되게 해준다. (잘 안씀)\r\nfunction* watchLogIn() {\r\n    // LOG_IN이란 액션이 실행될 때 까지 기다리겠다.\r\n    // 어차피 Login이 request 되는 순간에 실행되니까\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n    // 만약 takeLatest를 사용하면 2회 이상 연속으로 눌렀을 때 마지막꺼만 실행 (마우스 고장 등으로)\r\n    // 그러나 프론트에서만 마지막꺼 사용하는거고 백엔드에서는 두번 요청 보냄 (서버에는 두번 저장된다)\r\n    // throttle로 시간제한을 둬서 제한시간 이내 여러번 클릭시 한번만 요청하게 함\r\n\r\n    // 첫번째꺼만 실행하는 방법도 있음 takeReading?\r\n}\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchChangeNickname),\r\n        fork(watchLoadUser),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ])\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}