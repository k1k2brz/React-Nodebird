{"ast":null,"code":"import { all, fork, delay, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post';\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  // return axios.post(`/api/post/${data.postId}/comment`, data)\n}\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS\n      // data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeEvery(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n  yield takeEvery(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["all","fork","delay","put","takeEvery","axios","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","data","post","addPost","action","type","err","response","addCommentAPI","addComment","watchAddPost","watchAddComment","postSaga"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/sagas/post.tsx"],"sourcesContent":["import { all, fork, delay, put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n    ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS,\r\n    ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS,\r\n} from '../reducers/post';\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data)\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        // const result = yield call(addPostAPI, action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: action.data\r\n        })\r\n    } catch (err) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            data: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    // return axios.post(`/api/post/${data.postId}/comment`, data)\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        // const result = yield call(addCommentAPI, action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            // data: result.data\r\n        })\r\n    } catch (err) {\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeEvery(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeEvery(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n    ])\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACrE,OAAOC,KAAK,MAAM,OAAO;AACzB,SACIC,mBAAmB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAC7DC,gBAAgB,EAAEC,gBAAgB,EAAEC,gBAAgB,QACjD,kBAAkB;AAEzB,SAASC,UAAU,CAACC,IAAI,EAAE;EACtB,OAAOR,KAAK,CAACS,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;AACxC;AAEA,UAAUE,OAAO,CAACC,MAAM,EAAE;EACtB,IAAI;IACA;IACA,MAAMd,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MACNc,IAAI,EAAEN,gBAAgB;MACtBE,IAAI,EAAEG,MAAM,CAACH;IACjB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOK,GAAG,EAAE;IACV,MAAMf,GAAG,CAAC;MACNc,IAAI,EAAER,gBAAgB;MACtBI,IAAI,EAAEK,GAAG,CAACC,QAAQ,CAACN;IACvB,CAAC,CAAC;EACN;AACJ;AAEA,SAASO,aAAa,CAACP,IAAI,EAAE;EACzB;AACJ;AAEA,UAAUQ,UAAU,CAACL,MAAM,EAAE;EACzB,IAAI;IACA;IACA,MAAMd,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MACNc,IAAI,EAAET;MACN;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,OAAOU,GAAG,EAAE;IACV,MAAMf,GAAG,CAAC;MACNc,IAAI,EAAEX,mBAAmB;MACzBO,IAAI,EAAEK,GAAG,CAACC,QAAQ,CAACN;IACvB,CAAC,CAAC;EACN;AACJ;AAEA,UAAUS,YAAY,GAAG;EACrB,MAAMlB,SAAS,CAACM,gBAAgB,EAAEK,OAAO,CAAC;AAC9C;AAEA,UAAUQ,eAAe,GAAG;EACxB,MAAMnB,SAAS,CAACG,mBAAmB,EAAEc,UAAU,CAAC;AACpD;AAEA,eAAe,UAAUG,QAAQ,GAAG;EAChC,MAAMxB,GAAG,CAAC,CACNC,IAAI,CAACqB,YAAY,CAAC,EAClBrB,IAAI,CAACsB,eAAe,CAAC,CACxB,CAAC;AACN"},"metadata":{},"sourceType":"module"}