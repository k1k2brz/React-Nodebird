{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\TaeIl\\\\Desktop\\\\frontStudy\\\\React-Nodebird\\\\frontend\\\\components\\\\PostForm.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport { useCallback, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { addPost } from '../reducers/post';\nvar PostForm = function PostForm() {\n  _s();\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    imagePaths = _useSelector.imagePaths,\n    addPostDone = _useSelector.addPostDone;\n  var dispatch = useDispatch();\n  var imageInput = useRef(null);\n  var _useInput = useInput(''),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    text = _useInput2[0],\n    onChangeText = _useInput2[1],\n    setText = _useInput2[2];\n  useEffect(function () {\n    if (addPostDone) {\n      // onSubmit에서 초기화 하면 에러 났을 때 게시글 작성된게 전부 날아감\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    // dispatch자리에는 객체가 들어감\n    dispatch(addPost(text));\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n    // imageInput.current로 접근\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('images', e.target.files);\n    // FormData()를 사용하면 multipart형식으로 서버로 보냄\n    var imageFormData = new FormData();\n    // forEach 메서드가 이벤트에 없기 때문에 [].의 forEach메서드를 빌려쓰는 방식으로 작성\n    [].forEach.call(e.target.files, function (f) {\n      // key(라우터의 upload값과 일치해야함), 값\n      imageFormData.append('image', f);\n    });\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n_s(PostForm, \"oLJnCNvOP56znrl+Sel9oO8k/68=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["Form","Input","Button","useCallback","useRef","useEffect","useSelector","useDispatch","useInput","addPost","PostForm","state","post","imagePaths","addPostDone","dispatch","imageInput","text","onChangeText","setText","onSubmit","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","FormData","forEach","call","f","append","margin","map","v","display","width"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/components/PostForm.tsx"],"sourcesContent":["import { Form, Input, Button } from 'antd';\r\nimport { useCallback, useRef, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\nimport { addPost } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const { imagePaths, addPostDone } = useSelector((state: any) => state.post);\r\n    const dispatch = useDispatch()\r\n    const imageInput = useRef(null);\r\n    const [text, onChangeText, setText] = useInput('')\r\n\r\n    useEffect(() => {\r\n        if (addPostDone) {\r\n            // onSubmit에서 초기화 하면 에러 났을 때 게시글 작성된게 전부 날아감\r\n            setText('')\r\n        }\r\n    }, [addPostDone])\r\n\r\n    const onSubmit = useCallback(() => {\r\n        // dispatch자리에는 객체가 들어감\r\n        dispatch(addPost(text))\r\n    }, [])\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n        // imageInput.current로 접근\r\n    }, [imageInput.current])\r\n\r\n    const onChangeImages = useCallback((e) => {\r\n        console.log('images', e.target.files);\r\n        // FormData()를 사용하면 multipart형식으로 서버로 보냄\r\n        const imageFormData = new FormData();\r\n        // forEach 메서드가 이벤트에 없기 때문에 [].의 forEach메서드를 빌려쓰는 방식으로 작성\r\n        [].forEach.call(e.target.files, (f) => {\r\n            // key(라우터의 upload값과 일치해야함), 값\r\n            imageFormData.append('image', f);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType='multipart/form-data' onFinish={onSubmit}>\r\n            <Input.TextArea\r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder=\"어떤 신기한 일이 있었나요?\"\r\n            />\r\n            <div>\r\n                <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n                {/* 2개 이상일시 fills */}\r\n                {/* <input type=\"file\" name=\"image2\" multiple hidden ref={imageInput} /> */}\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => (\r\n                    <div key={v} style={{ display: 'inline-block' }}>\r\n                        <img src={v} style={{ width: '200px' }} alt={v} />\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}