{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TaeIl\\\\Desktop\\\\frontStudy\\\\React-Nodebird\\\\frontend\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Next.js는 import React from 'react' 구문이 필요없음\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nconst Home = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {}, []);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  return (\n    // 다른 컴포넌트로 감싸줄 경우 다른 컴포넌트 사용 가능\n    __jsx(AppLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }\n    }, me && __jsx(PostForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }\n    }), mainPosts.map(post => __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 37\n      }\n    })))\n  );\n};\nexport default Home;","map":{"version":3,"names":["useEffect","useDispatch","useSelector","AppLayout","PostCard","PostForm","Home","dispatch","me","state","user","mainPosts","post","map","id"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/pages/index.tsx"],"sourcesContent":["// Next.js는 import React from 'react' 구문이 필요없음\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostCard from '../components/PostCard';\r\nimport PostForm from '../components/PostForm';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n  const { me } = useSelector((state: any) => state.user);\r\n  const { mainPosts } = useSelector((state: any) => state.post);\r\n  return (\r\n    // 다른 컴포넌트로 감싸줄 경우 다른 컴포넌트 사용 가능\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post: any) => <PostCard key={post.id} post={post} />)}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;;AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAE7C,MAAMC,IAAI,GAAG,MAAM;EACjB,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9BD,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IAAEQ;EAAG,CAAC,GAAGN,WAAW,CAAEO,KAAU,IAAKA,KAAK,CAACC,IAAI,CAAC;EACtD,MAAM;IAAEC;EAAU,CAAC,GAAGT,WAAW,CAAEO,KAAU,IAAKA,KAAK,CAACG,IAAI,CAAC;EAC7D;IACE;IACA,MAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACPJ,EAAE,IAAI,MAAC,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EAClBG,SAAS,CAACE,GAAG,CAAED,IAAS,IAAK,MAAC,QAAQ;MAAC,GAAG,EAAEA,IAAI,CAACE,EAAG;MAAC,IAAI,EAAEF,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CAAC;EAC3D;AAEhB,CAAC;AAED,eAAeN,IAAI"},"metadata":{},"sourceType":"module"}