{"ast":null,"code":"// configureStore.js\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { compose, applyMiddleware, legacy_createStore as createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares))\n  // 데브툴 연결\n  : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  // store.dispatch({\n  //   type: 'CHANGE_NICKNAME',\n  //   data: 'lee',\n  // })\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","compose","applyMiddleware","legacy_createStore","createStore","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/store/configureStore.tsx"],"sourcesContent":["// configureStore.js\r\nimport { createWrapper } from \"next-redux-wrapper\";\r\nimport { compose, applyMiddleware, legacy_createStore as createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas'\r\n\r\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\r\n  console.log(action);\r\n  return next(action)\r\n}\r\n\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware, loggerMiddleware];\r\n  const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    // 데브툴 연결\r\n    : composeWithDevTools(applyMiddleware(...middlewares))\r\n  const store: any = createStore(reducer as any, enhancer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  // store.dispatch({\r\n  //   type: 'CHANGE_NICKNAME',\r\n  //   data: 'lee',\r\n  // })\r\n  return store\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,OAAO,EAAEC,eAAe,EAAEC,kBAAkB,IAAIC,WAAW,QAAQ,OAAO;AACnF,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,QAAQ,MAAM,UAAU;AAE/B,MAAMC,gBAAgB,GAAG,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAMC,IAAI,IAAMC,MAAM,IAAK;EACzEC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOD,IAAI,CAACC,MAAM,CAAC;AACrB,CAAC;AAED,MAAMG,cAAc,GAAG,MAAM;EAC3B,MAAMC,cAAc,GAAGX,oBAAoB,EAAE;EAC7C,MAAMY,WAAW,GAAG,CAACD,cAAc,EAAER,gBAAgB,CAAC;EACtD,MAAMU,QAAQ,GAAG,QACblB,OAAO,CAACC,eAAe,CAAC,GAAGgB,WAAW,CAAC;EACzC;EAAA,EACEb,mBAAmB,CAACH,eAAe,CAAC,GAAGgB,WAAW,CAAC,CAAC;EACxD,MAAME,KAAU,GAAGhB,WAAW,CAACG,OAAO,EAASY,QAAQ,CAAC;EACxDC,KAAK,CAACC,QAAQ,GAAGJ,cAAc,CAACK,GAAG,CAACd,QAAQ,CAAC;EAC7C;EACA;EACA;EACA;EACA,OAAOY,KAAK;AACd,CAAC;AAED,MAAMG,OAAO,GAAGvB,aAAa,CAACgB,cAAc,EAAE;EAC5CQ,KAAK;AACP,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}