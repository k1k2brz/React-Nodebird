{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\TaeIl\\\\Desktop\\\\frontStudy\\\\React-Nodebird\\\\frontend\\\\pages\\\\post\\\\[id].tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\n// post/[id]\n// [id].tsx [id]는 바뀔 자리 (다이나믹 라우팅)\n\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nvar Post = function Post() {\n  _s();\n  var router = useRouter();\n  // 뒤에 숫자 바뀌도록 구조분해 동적 라우팅\n  var id = router.query.id;\n  // 좀 더 정확히 알고싶으면 SQL Like query 검색\n\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    singlePost = _useSelector.singlePost;\n  console.log(id);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(PostCard, {\n    post: singlePost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n};\n_s(Post, \"mnFtsSWNkMUCzNZlr05ZwL2ppco=\", false, function () {\n  return [useRouter, useSelector];\n});\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["useRouter","useSelector","AppLayout","PostCard","Post","router","id","query","state","post","singlePost","console","log"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/pages/post/[id].tsx"],"sourcesContent":["// post/[id]\r\n// [id].tsx [id]는 바뀔 자리 (다이나믹 라우팅)\r\n\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport { useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport wrapper from '../../store/configureStore';\r\n\r\nconst Post = () => {\r\n    const router = useRouter();\r\n    // 뒤에 숫자 바뀌도록 구조분해 동적 라우팅\r\n    const { id } = router.query;\r\n    // 좀 더 정확히 알고싶으면 SQL Like query 검색\r\n\r\n    const { singlePost } = useSelector((state: any) => state.post);\r\n    console.log(id)\r\n\r\n    return (\r\n        <AppLayout>\r\n            <PostCard post={singlePost} />\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store): any => async ({ req }) => {\r\n    const cookie = req ? req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: 1\r\n    });\r\n    store.dispatch(END);\r\n    await store.sagaTask.toPromise();\r\n})\r\n\r\nexport default Post;"],"mappings":";;;;;AAAA;AACA;;AAGA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAKhD,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAS;EAAA;EACf,IAAMC,MAAM,GAAGL,SAAS,EAAE;EAC1B;EACA,IAAQM,EAAE,GAAKD,MAAM,CAACE,KAAK,CAAnBD,EAAE;EACV;;EAEA,mBAAuBL,WAAW,CAAC,UAACO,KAAU;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAtDC,UAAU,gBAAVA,UAAU;EAClBC,OAAO,CAACC,GAAG,CAACN,EAAE,CAAC;EAEf,OACI,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACN,MAAC,QAAQ;IAAC,IAAI,EAAEI,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACtB;AAEpB,CAAC;AAAC,GAdIN,IAAI;EAAA,QACSJ,SAAS,EAKDC,WAAW;AAAA;AAAA,KANhCG,IAAI;AAAA;AAiCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}