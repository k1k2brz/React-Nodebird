{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TaeIl\\\\Desktop\\\\frontStudy\\\\React-Nodebird\\\\frontend\\\\components\\\\LoginForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { Form, Input, Button } from 'antd';\nimport { useCallback, useEffect } from 'react';\nimport Link from 'next/link';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginRequestAction } from '../reducers/user';\n\n// div 태그가 됨\nconst ButtonWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__ButtonWrapper\",\n  componentId: \"sc-206vo2-0\"\n})([\"margin-top:10px;\"]);\nconst FormWrapper = styled(Form).withConfig({\n  displayName: \"LoginForm__FormWrapper\",\n  componentId: \"sc-206vo2-1\"\n})([\"padding:10px;\"]);\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const {\n    logInLoading,\n    logInError\n  } = useSelector(state => state.user);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n\n  // 로그인 실패 이유 알 수 있게\n  useEffect(() => {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n\n  //컴포넌트에 props로 받아진 함수는 useCallback을 사용해야 최적화가 된다.\n  // const onChangeId = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n  //     setId(e.target.value)\n  // }, [])\n\n  // const onChangePassword = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n  //     setPassword(e.target.value)\n  // }, [])\n\n  const onSubmitForm = useCallback(() => {\n    console.log(email, password);\n    // reducers 안꺼를 가져옴\n    dispatch(loginRequestAction({\n      email,\n      password\n    }));\n  }, [email, password]);\n  return __jsx(React.Fragment, null, __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), __jsx(Input, {\n    name: \"user-email\",\n    value: email,\n    onChange: onChangeEmail,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: logInLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 42\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 45\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))))));\n};\nexport default LoginForm;","map":{"version":3,"names":["styled","Form","Input","Button","useCallback","useEffect","Link","useInput","useDispatch","useSelector","loginRequestAction","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","logInLoading","logInError","state","user","email","onChangeEmail","password","onChangePassword","alert","onSubmitForm","console","log"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/components/LoginForm.tsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Form, Input, Button } from 'antd'\r\nimport { useCallback, useEffect } from 'react';\r\nimport Link from 'next/link'\r\nimport useInput from '../hooks/useInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginRequestAction } from '../reducers/user';\r\n\r\n// div 태그가 됨\r\nconst ButtonWrapper = styled.div`\r\n    margin-top: 10px;\r\n`\r\n\r\nconst FormWrapper = styled(Form)`\r\n    padding: 10px;\r\n`\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n    const { logInLoading, logInError } = useSelector((state: any) => state.user);\r\n    const [email, onChangeEmail] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    // 로그인 실패 이유 알 수 있게\r\n    useEffect(() => {\r\n        if (logInError) {\r\n            alert(logInError);\r\n        }\r\n    }, [logInError]);\r\n\r\n    //컴포넌트에 props로 받아진 함수는 useCallback을 사용해야 최적화가 된다.\r\n    // const onChangeId = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     setId(e.target.value)\r\n    // }, [])\r\n\r\n    // const onChangePassword = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     setPassword(e.target.value)\r\n    // }, [])\r\n\r\n    const onSubmitForm = useCallback(() => {\r\n        console.log(email, password)\r\n        // reducers 안꺼를 가져옴\r\n        dispatch(loginRequestAction({ email, password }));\r\n    }, [email, password])\r\n\r\n    return (\r\n        <>\r\n            <FormWrapper onFinish={onSubmitForm}>\r\n                <div>\r\n                    <label htmlFor='user-email'>이메일</label>\r\n                    <br />\r\n                    <Input name=\"user-email\" value={email} onChange={onChangeEmail} required />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='user-password'>비밀번호</label>\r\n                    <br />\r\n                    <Input name=\"user-password\" type=\"password\" value={password} onChange={onChangePassword} />\r\n                </div>\r\n                <ButtonWrapper>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={logInLoading}>로그인</Button>\r\n                    {/* link에 href넣고 button에는 안넣는게 좋다 */}\r\n                    <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n                </ButtonWrapper>\r\n            </FormWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}