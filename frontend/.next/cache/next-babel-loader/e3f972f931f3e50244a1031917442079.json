{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n// redux-thunk (한번에 dispatch를 여러번 할 수 있게 해준다) 여기선 안씀\n\nexport const initialState = {\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  unfollowError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\n\n// 다른 파일에서도 써야하니까 export\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\n// user reducer 상태를 바꿀 수 있는 action\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\n// Sequelize에서 합쳐준다\n// 중복되는 더미데이터 함수로 묶음\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: 'Violet',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: 'dummy1'\n  }, {\n    nickname: 'dummy2'\n  }, {\n    nickname: 'dummy333'\n  }],\n  Followers: [{\n    nickname: 'dummy1'\n  }, {\n    nickname: 'dummy2'\n  }, {\n    nickname: 'dummy333'\n  }]\n});\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST\n});\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        logInError: null,\n        logInDone: false\n      });\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data)\n      });\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInError: action.error\n      });\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true,\n        logOutDone: false,\n        logOutError: null\n      });\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: true,\n        me: null\n      });\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutError: action.error\n      });\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: true,\n        signUpDone: false,\n        signUpError: null\n      });\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpDone: true\n      });\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpError: action.error\n      });\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: true,\n        signUpDone: false,\n        signUpError: null\n      });\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpDone: true\n      });\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpError: action.error\n      });\n    case CHANGE_NICKNAME_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: true,\n        changeNicknameDone: false,\n        changeNicknameError: null\n      });\n    case CHANGE_NICKNAME_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameDone: true\n      });\n    case CHANGE_NICKNAME_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameError: action.error\n      });\n    case ADD_POST_TO_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: {\n          Posts: [{\n            id: action.data\n          }, ...state.me.Posts]\n        }\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","error"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/reducers/user.tsx"],"sourcesContent":["// redux-thunk (한번에 dispatch를 여러번 할 수 있게 해준다) 여기선 안씀\r\n\r\nexport const initialState = {\r\n    followLoading: false, // 팔로우 시도중\r\n    followDone: false,\r\n    followError: null,\r\n    unfollowLoading: false, // 언팔로우 시도중\r\n    unfollowDone: false,\r\n    unfollowError: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,\r\n    logInError: null,\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null,\r\n    signUpLoading: false, // 회원가입 시도중\r\n    signUpDone: false,\r\n    signUpError: null,\r\n    changeNicknameLoading: false, // 닉네임 변경 시도중\r\n    changeNicknameDone: false,\r\n    changeNicknameError: null,\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\n\r\n// 다른 파일에서도 써야하니까 export\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST' as const;\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS' as const;\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE' as const;\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST' as const;\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS' as const;\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE' as const;\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST' as const;\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS' as const;\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE' as const;\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST' as const;\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS' as const;\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE' as const;\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST' as const;\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS' as const;\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE' as const;\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST' as const;\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS' as const;\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE' as const;\r\n\r\n// user reducer 상태를 바꿀 수 있는 action\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME' as const;\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME' as const;\r\n\r\n// Sequelize에서 합쳐준다\r\n// 중복되는 더미데이터 함수로 묶음\r\nconst dummyUser = (data) => ({\r\n    ...data,\r\n    nickname: 'Violet',\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ nickname: 'dummy1' }, { nickname: 'dummy2' }, { nickname: 'dummy333' }],\r\n    Followers: [{ nickname: 'dummy1' }, { nickname: 'dummy2' }, { nickname: 'dummy333' }],\r\n})\r\n\r\nexport const loginRequestAction = (data) => ({\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const logoutRequestAction = () => ({\r\n    type: LOG_OUT_REQUEST,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST:\r\n            return {\r\n                ...state,\r\n                logInLoading: true,\r\n                logInError: null,\r\n                logInDone: false,\r\n            }\r\n        case LOG_IN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                logInLoading: false,\r\n                logInDone: true,\r\n                me: dummyUser(action.data),\r\n            }\r\n        case LOG_IN_FAILURE:\r\n            return {\r\n                ...state,\r\n                logInLoading: false,\r\n                logInError: action.error,\r\n            }\r\n        case LOG_OUT_REQUEST:\r\n            return {\r\n                ...state,\r\n                logOutLoading: true,\r\n                logOutDone: false,\r\n                logOutError: null,\r\n            }\r\n        case LOG_OUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                logOutLoading: false,\r\n                logOutDone: true,\r\n                me: null,\r\n            }\r\n        case LOG_OUT_FAILURE:\r\n            return {\r\n                ...state,\r\n                logOutLoading: false,\r\n                logOutError: action.error,\r\n            }\r\n        case SIGN_UP_REQUEST:\r\n            return {\r\n                ...state,\r\n                signUpLoading: true,\r\n                signUpDone: false,\r\n                signUpError: null,\r\n            }\r\n        case SIGN_UP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                signUpLoading: false,\r\n                signUpDone: true,\r\n            }\r\n        case SIGN_UP_FAILURE:\r\n            return {\r\n                ...state,\r\n                signUpLoading: false,\r\n                signUpError: action.error,\r\n            }\r\n        case SIGN_UP_REQUEST:\r\n            return {\r\n                ...state,\r\n                signUpLoading: true,\r\n                signUpDone: false,\r\n                signUpError: null,\r\n            }\r\n        case SIGN_UP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                signUpLoading: false,\r\n                signUpDone: true,\r\n            }\r\n        case SIGN_UP_FAILURE:\r\n            return {\r\n                ...state,\r\n                signUpLoading: false,\r\n                signUpError: action.error,\r\n            }\r\n        case CHANGE_NICKNAME_REQUEST:\r\n            return {\r\n                ...state,\r\n                changeNicknameLoading: true,\r\n                changeNicknameDone: false,\r\n                changeNicknameError: null,\r\n            }\r\n        case CHANGE_NICKNAME_SUCCESS:\r\n            return {\r\n                ...state,\r\n                changeNicknameLoading: false,\r\n                changeNicknameDone: true,\r\n            }\r\n        case CHANGE_NICKNAME_FAILURE:\r\n            return {\r\n                ...state,\r\n                changeNicknameLoading: false,\r\n                changeNicknameError: action.error,\r\n            }\r\n        case ADD_POST_TO_ME:\r\n            return {\r\n                ...state,\r\n                me: {\r\n                    Posts: [{ id: action.data }, ...state.me.Posts],\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}