{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TaeIl\\\\Desktop\\\\frontStudy\\\\React-Nodebird\\\\frontend\\\\components\\\\FollowList.tsx\";\nvar __jsx = React.createElement;\nimport { StopOutlined } from '@ant-design/icons';\nimport { List, Button, Card } from 'antd';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_FOLLOWER_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\nconst FollowList = ({\n  header,\n  data\n}) => {\n  const dispatch = useDispatch();\n  // 반복문 안에 함수 들어갈 때 고차함수를 사용하면 onCancel(item.id)안에 item.id를 여기로 보낼 수 있다.\n  const onCancel = id => () => {\n    if (header === \"팔로잉\") {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: id\n      });\n    }\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: id\n    });\n  };\n  return __jsx(List, {\n    style: {\n      marginBottom: 20\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, header),\n    loadMore: __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '10px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 23\n      }\n    }, __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 78\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\")),\n    bordered: true,\n    dataSource: data,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(StopOutlined, {\n        key: \"stop\",\n        onClick: onCancel(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 37\n        }\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, __jsx(Card.Meta, {\n      description: item.nickname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  });\n};\nexport default FollowList;","map":{"version":3,"names":["StopOutlined","List","Button","Card","React","useDispatch","REMOVE_FOLLOWER_REQUEST","UNFOLLOW_REQUEST","FollowList","header","data","dispatch","onCancel","id","type","marginBottom","gutter","xs","md","textAlign","margin","item","marginTop","nickname"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/components/FollowList.tsx"],"sourcesContent":["import { StopOutlined } from '@ant-design/icons';\r\nimport { List, Button, Card } from 'antd'\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { REMOVE_FOLLOWER_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\nconst FollowList = ({ header, data }) => {\r\n    const dispatch = useDispatch();\r\n    // 반복문 안에 함수 들어갈 때 고차함수를 사용하면 onCancel(item.id)안에 item.id를 여기로 보낼 수 있다.\r\n    const onCancel: any = (id) => () => {\r\n        if (header === \"팔로잉\") {\r\n            dispatch({\r\n                type: UNFOLLOW_REQUEST,\r\n                data: id,\r\n            })\r\n        }\r\n        dispatch({\r\n            type: REMOVE_FOLLOWER_REQUEST,\r\n            data: id,\r\n        })\r\n    }\r\n    return (\r\n        <List\r\n            style={{ marginBottom: 20 }}\r\n            grid={{ gutter: 4, xs: 2, md: 3 }}\r\n            size=\"small\"\r\n            header={<div>{header}</div>}\r\n            loadMore={<div style={{ textAlign: 'center', margin: '10px 0' }}><Button>더 보기</Button></div>}\r\n            bordered\r\n            dataSource={data}\r\n            renderItem={(item: any) => (\r\n                <List.Item style={{ marginTop: 20 }}>\r\n                    <Card actions={[<StopOutlined key=\"stop\" onClick={onCancel(item.id)} />]}>\r\n                        <Card.Meta description={item.nickname} />\r\n                    </Card>\r\n                </List.Item>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default FollowList;"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,mBAAmB;AAChD,SAASC,IAAI,EAAEC,MAAM,EAAEC,IAAI,QAAQ,MAAM;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,uBAAuB,EAAEC,gBAAgB,QAAQ,kBAAkB;AAE5E,MAAMC,UAAU,GAAG,CAAC;EAAEC,MAAM;EAAEC;AAAK,CAAC,KAAK;EACrC,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B;EACA,MAAMO,QAAa,GAAIC,EAAE,IAAK,MAAM;IAChC,IAAIJ,MAAM,KAAK,KAAK,EAAE;MAClBE,QAAQ,CAAC;QACLG,IAAI,EAAEP,gBAAgB;QACtBG,IAAI,EAAEG;MACV,CAAC,CAAC;IACN;IACAF,QAAQ,CAAC;MACLG,IAAI,EAAER,uBAAuB;MAC7BI,IAAI,EAAEG;IACV,CAAC,CAAC;EACN,CAAC;EACD,OACI,MAAC,IAAI;IACD,KAAK,EAAE;MAAEE,YAAY,EAAE;IAAG,CAAE;IAC5B,IAAI,EAAE;MAAEC,MAAM,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAClC,IAAI,EAAC,OAAO;IACZ,MAAM,EAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAMT,MAAM,CAAQ;IAC5B,QAAQ,EAAE;MAAK,KAAK,EAAE;QAAEU,SAAS,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAC,MAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,yBAAc,CAAO;IAC7F,QAAQ;IACR,UAAU,EAAEV,IAAK;IACjB,UAAU,EAAGW,IAAS,IAClB,MAAC,IAAI,CAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAChC,MAAC,IAAI;MAAC,OAAO,EAAE,CAAC,MAAC,YAAY;QAAC,GAAG,EAAC,MAAM;QAAC,OAAO,EAAEV,QAAQ,CAACS,IAAI,CAACR,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACrE,MAAC,IAAI,CAAC,IAAI;MAAC,WAAW,EAAEQ,IAAI,CAACE,QAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACtC,CAEb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACJ;AAEV,CAAC;AAED,eAAef,UAAU"},"metadata":{},"sourceType":"module"}