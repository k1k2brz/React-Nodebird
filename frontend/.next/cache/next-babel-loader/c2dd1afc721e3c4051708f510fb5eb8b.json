{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TaeIl\\\\Desktop\\\\frontStudy\\\\React-Nodebird\\\\frontend\\\\pages\\\\post\\\\[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// post/[id]\n// [id].tsx [id]는 바뀔 자리 (다이나믹 라우팅)\n\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport wrapper from '../../store/configureStore';\nconst Post = () => {\n  const router = useRouter();\n  // 뒤에 숫자 바뀌도록 구조분해 동적 라우팅\n  const {\n    id\n  } = router.query;\n  // 좀 더 정확히 알고싶으면 SQL Like query 검색\n\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  console.log(id);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n};\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req\n}) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: req\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"names":["axios","useRouter","useSelector","END","AppLayout","PostCard","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","Post","router","id","query","singlePost","state","post","console","log","getServerSideProps","store","req","cookie","headers","defaults","Cookie","dispatch","type","data","sagaTask","toPromise"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/pages/post/[id].tsx"],"sourcesContent":["// post/[id]\r\n// [id].tsx [id]는 바뀔 자리 (다이나믹 라우팅)\r\n\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport { useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport wrapper from '../../store/configureStore';\r\n\r\nconst Post = () => {\r\n    const router = useRouter();\r\n    // 뒤에 숫자 바뀌도록 구조분해 동적 라우팅\r\n    const { id } = router.query;\r\n    // 좀 더 정확히 알고싶으면 SQL Like query 검색\r\n\r\n    const { singlePost } = useSelector((state: any) => state.post);\r\n    console.log(id)\r\n\r\n    return (\r\n        <AppLayout>\r\n            <PostCard post={singlePost} />\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store): any => async ({ req }) => {\r\n    const cookie = req ? req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: req\r\n    });\r\n    store.dispatch(END);\r\n    await store.sagaTask.toPromise();\r\n})\r\n\r\nexport default Post;"],"mappings":";;;AAAA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,GAAG,QAAQ,YAAY;AAChC,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,oBAAoB,QAAQ,qBAAqB;AAC1D,OAAOC,OAAO,MAAM,4BAA4B;AAEhD,MAAMC,IAAI,GAAG,MAAM;EACf,MAAMC,MAAM,GAAGT,SAAS,EAAE;EAC1B;EACA,MAAM;IAAEU;EAAG,CAAC,GAAGD,MAAM,CAACE,KAAK;EAC3B;;EAEA,MAAM;IAAEC;EAAW,CAAC,GAAGX,WAAW,CAAEY,KAAU,IAAKA,KAAK,CAACC,IAAI,CAAC;EAC9DC,OAAO,CAACC,GAAG,CAACN,EAAE,CAAC;EAEf,OACI,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACN,MAAC,QAAQ;IAAC,IAAI,EAAEE,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACtB;AAEpB,CAAC;AAED,OAAO,MAAMK,kBAAkB,GAAGV,OAAO,CAACU,kBAAkB,CAAEC,KAAK,IAAU,OAAO;EAAEC;AAAI,CAAC,KAAK;EAC5F,MAAMC,MAAM,GAAGD,GAAG,GAAGA,GAAG,CAACE,OAAO,CAACD,MAAM,GAAG,EAAE;EAC5CrB,KAAK,CAACuB,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAG,EAAE;EAClC,IAAIJ,GAAG,IAAIC,MAAM,EAAE;IACfrB,KAAK,CAACuB,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAGH,MAAM;EAC1C;EACAF,KAAK,CAACM,QAAQ,CAAC;IACXC,IAAI,EAAEnB;EACV,CAAC,CAAC;EACFY,KAAK,CAACM,QAAQ,CAAC;IACXC,IAAI,EAAEpB,iBAAiB;IACvBqB,IAAI,EAAEP;EACV,CAAC,CAAC;EACFD,KAAK,CAACM,QAAQ,CAACtB,GAAG,CAAC;EACnB,MAAMgB,KAAK,CAACS,QAAQ,CAACC,SAAS,EAAE;AACpC,CAAC,CAAC;AAEF,eAAepB,IAAI"},"metadata":{},"sourceType":"module"}