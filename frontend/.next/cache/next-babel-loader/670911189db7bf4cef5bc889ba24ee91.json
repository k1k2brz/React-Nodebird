{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { HYDRATE } from 'next-redux-wrapper';\n\n// const initialState = {\n//     name: 'taeil',\n//     age: 30,\n//     password: 'babo'\n// }\n\n// // 매번 새로 data를 만들 수 없기 때문에 동적으로 (action creator)\n// const changeNickname = (data) => {\n//     return {\n//         type: 'CHANGE_NICKNAME',\n//         data,\n//     }\n// }\n// changeNickname('lee');\n\n// store.dispatch(changeNickname('nene'))\n\nconst initialState = {\n  user: {},\n  post: {}\n};\n\n// (이전상태, 액션) => 다음상태\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","initialState","user","post","rootReducer","state","action","type","payload","isLoggedIn","data"],"sources":["C:/Users/TaeIl/Desktop/frontStudy/React-Nodebird/frontend/reducers/index.tsx"],"sourcesContent":["import { HYDRATE } from 'next-redux-wrapper'\r\n\r\n// const initialState = {\r\n//     name: 'taeil',\r\n//     age: 30,\r\n//     password: 'babo'\r\n// }\r\n\r\n// // 매번 새로 data를 만들 수 없기 때문에 동적으로 (action creator)\r\n// const changeNickname = (data) => {\r\n//     return {\r\n//         type: 'CHANGE_NICKNAME',\r\n//         data,\r\n//     }\r\n// }\r\n// changeNickname('lee');\r\n\r\n// store.dispatch(changeNickname('nene'))\r\n\r\ninterface IUser {\r\n    isLoggedIn: boolean,\r\n    user: string\r\n}\r\n\r\n\r\nconst initialState = {\r\n    user: {\r\n\r\n    },\r\n    post: {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            return { ...state, ...action.payload };\r\n        case 'LOG_IN':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn: true,\r\n                    user: action.data,\r\n                }\r\n            }\r\n        case 'LOG_OUT':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn: false,\r\n                    user: null,\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;"],"mappings":";;;AAAA,SAASA,OAAO,QAAQ,oBAAoB;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,CAEN,CAAC;EACDC,IAAI,EAAE,CAEN;AACJ,CAAC;;AAID;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EAClD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKP,OAAO;MACR,uCAAYK,KAAK,GAAKC,MAAM,CAACE,OAAO;IACxC,KAAK,QAAQ;MACT,uCACOH,KAAK;QACRH,IAAI,kCACGG,KAAK,CAACH,IAAI;UACbO,UAAU,EAAE,IAAI;UAChBP,IAAI,EAAEI,MAAM,CAACI;QAAI;MACpB;IAET,KAAK,SAAS;MACV,uCACOL,KAAK;QACRH,IAAI,kCACGG,KAAK,CAACH,IAAI;UACbO,UAAU,EAAE,KAAK;UACjBP,IAAI,EAAE;QAAI;MACb;IAET;MACI,OAAOG,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}